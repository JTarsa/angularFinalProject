{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { WorkStatus } from 'src/app/enums/workStatus.enum';\nimport { Priority } from 'src/app/enums/priority.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/services/functionality.service\";\nexport class FunctionalityEditComponent {\n  constructor(route, formBuilder, functionalitiesService, router) {\n    this.route = route;\n    this.formBuilder = formBuilder;\n    this.functionalitiesService = functionalitiesService;\n    this.router = router;\n    this.workStatusValues = Object.values(WorkStatus);\n    this.priorityValues = Object.values(Priority);\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id !== null) {\n        this.functionalityId = id;\n        this.loadFunctionality();\n      } else {\n        this.functionalityId = '';\n      }\n    });\n    const currentDate = new Date().toISOString().split('T')[0];\n    const addedDateControl = new FormControl({\n      value: currentDate,\n      disabled: true\n    });\n    this.functionalityForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      priority: [Priority.Low, Validators.required],\n      status: [WorkStatus.Todo, Validators.required],\n      addedDate: addedDateControl,\n      startDate: [''],\n      endDate: [''],\n      timeSpent: ['']\n    });\n  }\n  // List task, ktore naleza do tej funkcjonalnosci\n  // 2. wszystkie funkcjonalnosci\n  // 3. id funkcjonalnosci do ktorej przynaleza te taski w liscie\n  // 4. dla kazdego obiekut z taskow sprawdz czy ktorys status jest doing\n  // 5. jezeli jest to funkctionality.status = doingol\n  loadFunctionality() {\n    this.functionalitiesService.getSingleFunctionality(this.functionalityId).subscribe(functionality => {\n      this.functionality = functionality;\n    }, error => {\n      console.log(error);\n    });\n  }\n  updateFunctionalityStatus(taskStatus) {\n    if (this.functionality) {\n      if (taskStatus === 'doing') {\n        this.functionality.status = WorkStatus.Doing;\n      } else if (taskStatus === 'done') {\n        this.functionality.status = WorkStatus.Done;\n      } else {\n        this.functionality.status = WorkStatus.Todo;\n      }\n    }\n  }\n  editFunctionality() {\n    const taskStatus = this.functionalityForm.value.status;\n    this.updateFunctionalityStatus(taskStatus);\n    if (this.functionality) {\n      this.functionality.name = this.functionalityForm.value.name;\n      this.functionality.description = this.functionalityForm.value.description;\n      this.functionality.priority = this.functionalityForm.value.priority;\n      this.functionality.status = this.functionalityForm.value.status;\n      this.functionality.addedDate = new Date(this.functionalityForm.value.addedDate);\n      this.functionality.startDate = this.functionalityForm.value.startDate ? new Date(this.functionalityForm.value.startDate) : undefined;\n      this.functionality.endDate = this.functionalityForm.value.endDate ? new Date(this.functionalityForm.value.endDate) : undefined;\n      this.functionality.timeSpent = this.functionalityForm.value.timeSpent ? +this.functionalityForm.value.timeSpent : undefined;\n      this.functionalitiesService.updateFunctionality(this.functionality).subscribe(functionality => {\n        console.log(functionality);\n        this.router.navigate(['/functionalities']);\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n}\nFunctionalityEditComponent.ɵfac = function FunctionalityEditComponent_Factory(t) {\n  return new (t || FunctionalityEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.FunctionalityService), i0.ɵɵdirectiveInject(i1.Router));\n};\nFunctionalityEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FunctionalityEditComponent,\n  selectors: [[\"app-functionality-edit\"]],\n  decls: 42,\n  vars: 0,\n  consts: [[1, \"form-container\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"required\", \"\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"name\", \"description\", \"required\", \"\"], [\"for\", \"priority\"], [\"id\", \"priority\", \"name\", \"priority\", \"required\", \"\"], [\"value\", \"low\"], [\"value\", \"medium\"], [\"value\", \"high\"], [\"for\", \"status\"], [\"id\", \"status\", \"name\", \"status\", \"required\", \"\"], [\"value\", \"pending\"], [\"value\", \"in progress\"], [\"value\", \"completed\"], [\"for\", \"startDate\"], [\"type\", \"date\", \"id\", \"startDate\", \"name\", \"startDate\", \"min\", \"Date.now()\", \"required\", \"\"], [\"for\", \"endDate\"], [\"type\", \"date\", \"id\", \"endDate\", \"name\", \"endDate\", \"required\", \"\"], [\"type\", \"submit\"]],\n  template: function FunctionalityEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\")(2, \"h1\");\n      i0.ɵɵtext(3, \"Edit functionality\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"label\", 2);\n      i0.ɵɵtext(6, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 4);\n      i0.ɵɵtext(10, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 1)(13, \"label\", 6);\n      i0.ɵɵtext(14, \"Priority\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"select\", 7)(16, \"option\", 8);\n      i0.ɵɵtext(17, \"Low\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"option\", 9);\n      i0.ɵɵtext(19, \"Medium\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"option\", 10);\n      i0.ɵɵtext(21, \"High\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"div\", 1)(23, \"label\", 11);\n      i0.ɵɵtext(24, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"select\", 12)(26, \"option\", 13);\n      i0.ɵɵtext(27, \"Pending\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"option\", 14);\n      i0.ɵɵtext(29, \"In Progress\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"option\", 15);\n      i0.ɵɵtext(31, \"Completed\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(32, \"div\", 1)(33, \"label\", 16);\n      i0.ɵɵtext(34, \"Start date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(35, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 1)(37, \"label\", 18);\n      i0.ɵɵtext(38, \"End date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(39, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"button\", 20);\n      i0.ɵɵtext(41, \"Edit functionality\");\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.NgControlStatusGroup, i2.NgForm],\n  styles: [\".form-container[_ngcontent-%COMP%] {\\n  max-width: 400px;\\n  margin: 0 auto;\\n}\\n\\n.form-container[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-bottom: 5px;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%]   select[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 8px;\\n  font-size: 16px;\\n  border: 1px solid #ccc;\\n  border-radius: 4px;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   input[type=\\\"date\\\"][_ngcontent-%COMP%] {\\n  \\n}\\n\\n.form-group[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  display: block;\\n  width: 100%;\\n  padding: 10px;\\n  font-size: 16px;\\n  background-color: #4caf50;\\n  color: white;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZ1bmN0aW9uYWxpdHktZWRpdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxjQUFjO0VBQ2Qsa0JBQWtCO0FBQ3BCOztBQUVBOztFQUVFLFdBQVc7RUFDWCxZQUFZO0VBQ1osZUFBZTtFQUNmLHNCQUFzQjtFQUN0QixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxxQ0FBcUM7QUFDdkM7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsV0FBVztFQUNYLGFBQWE7RUFDYixlQUFlO0VBQ2YseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakIiLCJmaWxlIjoiZnVuY3Rpb25hbGl0eS1lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS1jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDQwMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuLmZvcm0tY29udGFpbmVyIGgxIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG4uZm9ybS1ncm91cCB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cbi5mb3JtLWdyb3VwIGxhYmVsIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IDVweDtcbn1cblxuLmZvcm0tZ3JvdXAgaW5wdXQsXG4uZm9ybS1ncm91cCBzZWxlY3Qge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogOHB4O1xuICBmb250LXNpemU6IDE2cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbn1cblxuLmZvcm0tZ3JvdXAgaW5wdXRbdHlwZT1cImRhdGVcIl0ge1xuICAvKiBBZGRpdGlvbmFsIHN0eWxlcyBmb3IgZGF0ZSBpbnB1dCAqL1xufVxuXG4uZm9ybS1ncm91cCBidXR0b24ge1xuICBkaXNwbGF5OiBibG9jaztcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRjYWY1MDtcbiAgY29sb3I6IHdoaXRlO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuIl19 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9mdW5jdGlvbmFsaXR5LWVkaXQvZnVuY3Rpb25hbGl0eS1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGNBQWM7RUFDZCxrQkFBa0I7QUFDcEI7O0FBRUE7O0VBRUUsV0FBVztFQUNYLFlBQVk7RUFDWixlQUFlO0VBQ2Ysc0JBQXNCO0VBQ3RCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHFDQUFxQztBQUN2Qzs7QUFFQTtFQUNFLGNBQWM7RUFDZCxXQUFXO0VBQ1gsYUFBYTtFQUNiLGVBQWU7RUFDZix5QkFBeUI7RUFDekIsWUFBWTtFQUNaLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQjs7QUFFQSxvaERBQW9oRCIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRhaW5lciB7XG4gIG1heC13aWR0aDogNDAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uZm9ybS1jb250YWluZXIgaDEge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5mb3JtLWdyb3VwIHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLmZvcm0tZ3JvdXAgbGFiZWwge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xufVxuXG4uZm9ybS1ncm91cCBpbnB1dCxcbi5mb3JtLWdyb3VwIHNlbGVjdCB7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiA4cHg7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xufVxuXG4uZm9ybS1ncm91cCBpbnB1dFt0eXBlPVwiZGF0ZVwiXSB7XG4gIC8qIEFkZGl0aW9uYWwgc3R5bGVzIGZvciBkYXRlIGlucHV0ICovXG59XG5cbi5mb3JtLWdyb3VwIGJ1dHRvbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTBweDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGNhZjUwO1xuICBjb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","WorkStatus","Priority","FunctionalityEditComponent","constructor","route","formBuilder","functionalitiesService","router","Object","values","ngOnInit","paramMap","subscribe","params","id","get","functionalityId","loadFunctionality","currentDate","Date","toISOString","split","addedDateControl","value","disabled","functionalityForm","group","name","required","description","priority","Low","status","Todo","addedDate","startDate","endDate","timeSpent","getSingleFunctionality","functionality","error","console","log","updateFunctionalityStatus","taskStatus","Doing","Done","editFunctionality","undefined","updateFunctionality","navigate","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/haze/Desktop/Angular Final Project/angularFinalProject/src/app/components/functionality-edit/functionality-edit.component.ts","/Users/haze/Desktop/Angular Final Project/angularFinalProject/src/app/components/functionality-edit/functionality-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FunctionalityInterface } from 'src/app/interfaces/functionality.interface';\nimport { FunctionalityService } from 'src/app/services/functionality.service';\nimport { TaskInterface } from 'src/app/interfaces/task.interface';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { WorkStatus } from 'src/app/enums/workStatus.enum';\nimport { Priority } from 'src/app/enums/priority.enum';\n\n@Component({\n  selector: 'app-functionality-edit',\n  templateUrl: './functionality-edit.component.html',\n  styleUrls: ['./functionality-edit.component.css'],\n})\nexport class FunctionalityEditComponent implements OnInit {\n  functionality: FunctionalityInterface | undefined;\n  functionalityForm!: FormGroup;\n  workStatusValues = Object.values(WorkStatus);\n  priorityValues = Object.values(Priority);\n  functionalityId!: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private functionalitiesService: FunctionalityService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params) => {\n      const id = params.get('id');\n      if (id !== null) {\n        this.functionalityId = id;\n        this.loadFunctionality();\n      } else {\n        this.functionalityId = '';\n      }\n    });\n\n    const currentDate = new Date().toISOString().split('T')[0];\n    const addedDateControl = new FormControl({\n      value: currentDate,\n      disabled: true,\n    });\n\n    this.functionalityForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      priority: [Priority.Low, Validators.required],\n      status: [WorkStatus.Todo, Validators.required],\n      addedDate: addedDateControl,\n      startDate: [''],\n      endDate: [''],\n      timeSpent: [''],\n    });\n  }\n\n  // List task, ktore naleza do tej funkcjonalnosci\n  // 2. wszystkie funkcjonalnosci\n  // 3. id funkcjonalnosci do ktorej przynaleza te taski w liscie\n  // 4. dla kazdego obiekut z taskow sprawdz czy ktorys status jest doing\n  // 5. jezeli jest to funkctionality.status = doingol\n\n  loadFunctionality() {\n    this.functionalitiesService\n      .getSingleFunctionality(this.functionalityId)\n      .subscribe(\n        (functionality: FunctionalityInterface) => {\n          this.functionality = functionality;\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n\n  updateFunctionalityStatus(taskStatus: string) {\n    if (this.functionality) {\n      if (taskStatus === 'doing') {\n        this.functionality.status = WorkStatus.Doing;\n      } else if (taskStatus === 'done') {\n        this.functionality.status = WorkStatus.Done;\n      } else {\n        this.functionality.status = WorkStatus.Todo;\n      }\n    }\n  }\n\n  editFunctionality() {\n    const taskStatus = this.functionalityForm.value.status;\n    this.updateFunctionalityStatus(taskStatus);\n\n    if (this.functionality) {\n      this.functionality.name = this.functionalityForm.value.name;\n      this.functionality.description = this.functionalityForm.value.description;\n      this.functionality.priority = this.functionalityForm.value.priority;\n      this.functionality.status = this.functionalityForm.value.status;\n      this.functionality.addedDate = new Date(\n        this.functionalityForm.value.addedDate\n      );\n      this.functionality.startDate = this.functionalityForm.value.startDate\n        ? new Date(this.functionalityForm.value.startDate)\n        : undefined;\n      this.functionality.endDate = this.functionalityForm.value.endDate\n        ? new Date(this.functionalityForm.value.endDate)\n        : undefined;\n      this.functionality.timeSpent = this.functionalityForm.value.timeSpent\n        ? +this.functionalityForm.value.timeSpent\n        : undefined;\n\n      this.functionalitiesService\n        .updateFunctionality(this.functionality)\n        .subscribe(\n          (functionality) => {\n            console.log(functionality);\n            this.router.navigate(['/functionalities']);\n          },\n          (error) => {\n            console.log(error);\n          }\n        );\n    }\n  }\n}\n","<form class=\"form-container\">\n  <div>\n    <h1>Edit functionality</h1>\n    <div class=\"form-group\">\n      <label for=\"title\">Title</label>\n      <input type=\"text\" id=\"title\" name=\"title\" required />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description</label>\n      <input type=\"text\" id=\"description\" name=\"description\" required />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"priority\">Priority</label>\n      <select id=\"priority\" name=\"priority\" required>\n        <option value=\"low\">Low</option>\n        <option value=\"medium\">Medium</option>\n        <option value=\"high\">High</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"status\">Status</label>\n      <select id=\"status\" name=\"status\" required>\n        <option value=\"pending\">Pending</option>\n        <option value=\"in progress\">In Progress</option>\n        <option value=\"completed\">Completed</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"startDate\">Start date</label>\n      <input type=\"date\" id=\"startDate\" name=\"startDate\" min=\"Date.now()\" required />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"endDate\">End date</label>\n      <input type=\"date\" id=\"endDate\" name=\"endDate\" required />\n    </div>\n    <button type=\"submit\">Edit functionality</button>\n  </div>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}