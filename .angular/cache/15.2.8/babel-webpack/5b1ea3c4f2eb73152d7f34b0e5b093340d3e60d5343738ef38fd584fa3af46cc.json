{"ast":null,"code":"import { Priority } from 'src/app/enums/priority.enum';\nimport { WorkStatus } from 'src/app/enums/workStatus.enum';\nimport { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/task.service\";\nimport * as i3 from \"src/app/services/functionality.service\";\nimport * as i4 from \"@angular/router\";\nexport class TaskFormComponent {\n  constructor(formBuilder, taskService, functionalityService, router) {\n    this.formBuilder = formBuilder;\n    this.taskService = taskService;\n    this.functionalityService = functionalityService;\n    this.router = router;\n    this.tasks = [];\n    this.workStatusValues = Object.values(WorkStatus);\n    this.priorityValues = Object.values(Priority);\n    this.functionalityList = [];\n  }\n  ngOnInit() {\n    const currentDate = new Date().toISOString().split('T')[0];\n    const addedDateControl = new FormControl({\n      value: currentDate,\n      disabled: true\n    });\n    this.taskForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      priority: [Priority.Low, Validators.required],\n      projectName: ['', Validators.required],\n      owner: ['', Validators.required],\n      status: [WorkStatus.Todo, Validators.required],\n      addedDate: addedDateControl,\n      startDate: [''],\n      endDate: [''],\n      timeSpent: [''],\n      functionality: ['', Validators.required]\n    });\n    this.taskService.getTasks().subscribe(tasks => {\n      this.tasks = tasks;\n    }, error => console.log(error));\n    this.functionalityService.getFunctionalities().subscribe(functionalities => {\n      this.functionalityList = functionalities;\n    }, error => console.log(error));\n  }\n  addTask() {\n    const currentDate = new Date().toISOString().split('T')[0];\n    const addedDateControl = new FormControl({\n      value: currentDate,\n      disabled: true\n    });\n    const addedDateValue = addedDateControl.value !== null ? addedDateControl.value : currentDate;\n    const selectedFunctionalityId = this.taskForm.value.functionality;\n    const selectedFunctionality = this.functionalityList.find(f => f.ID === selectedFunctionalityId);\n    if (!selectedFunctionality) {\n      return; // Dodaj odpowiednie obsłużenie błędu, jeśli funkcjonalność nie zostanie znaleziona\n    }\n\n    const newTask = {\n      ID: Date.now().toString(),\n      name: this.taskForm.value.name,\n      description: this.taskForm.value.description,\n      priority: this.taskForm.value.priority,\n      functionalityID: selectedFunctionality.ID,\n      functionality: selectedFunctionality,\n      state: this.taskForm.value.status,\n      addedDate: new Date(addedDateValue),\n      startDate: this.taskForm.value.startDate,\n      endDate: this.taskForm.value.endDate,\n      assignedUser: this.taskForm.value.owner\n    };\n    this.taskService.createTask(newTask).subscribe(task => {\n      console.log(task);\n      if (!selectedFunctionality.tasks) {\n        selectedFunctionality.tasks = []; // Inicjalizuj tablicę zadaniami, jeśli nie istnieje\n      }\n\n      selectedFunctionality.tasks.push(task); // Dodaj zadanie do listy zadań funkcjonalności\n      this.router.navigateByUrl('/functionalities');\n    }, error => console.log(error));\n  }\n}\nTaskFormComponent.ɵfac = function TaskFormComponent_Factory(t) {\n  return new (t || TaskFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TaskService), i0.ɵɵdirectiveInject(i3.FunctionalityService), i0.ɵɵdirectiveInject(i4.Router));\n};\nTaskFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskFormComponent,\n  selectors: [[\"app-task-form\"]],\n  decls: 53,\n  vars: 0,\n  consts: [[1, \"task-form\"], [1, \"form-group\"], [1, \"input-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"name\", \"description\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"priority\"], [\"id\", \"priority\", \"name\", \"priority\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"High\"], [\"value\", \"Medium\"], [\"value\", \"Low\"], [\"for\", \"status\"], [\"id\", \"status\", \"name\", \"status\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"In Progress\"], [\"value\", \"Completed\"], [\"value\", \"On Hold\"], [\"for\", \"functionality\"], [\"id\", \"functionality\", \"name\", \"functionality\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"value\", \"3\"], [\"for\", \"startDate\"], [\"type\", \"date\", \"id\", \"startDate\", \"name\", \"startDate\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"endDate\"], [\"type\", \"date\", \"id\", \"endDate\", \"name\", \"endDate\", \"required\", \"\", 1, \"form-control\"], [1, \"btn-create-task\"]],\n  template: function TaskFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\")(2, \"h1\");\n      i0.ɵɵtext(3, \"Create a new task for this functionality\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 2)(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 2)(10, \"label\", 5);\n      i0.ɵɵtext(11, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 2)(14, \"label\", 7);\n      i0.ɵɵtext(15, \"Priority\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"select\", 8)(17, \"option\", 9);\n      i0.ɵɵtext(18, \"High\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"option\", 10);\n      i0.ɵɵtext(20, \"Medium\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"option\", 11);\n      i0.ɵɵtext(22, \"Low\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(23, \"div\", 2)(24, \"label\", 12);\n      i0.ɵɵtext(25, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"select\", 13)(27, \"option\", 14);\n      i0.ɵɵtext(28, \"In Progress\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"option\", 15);\n      i0.ɵɵtext(30, \"Completed\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"option\", 16);\n      i0.ɵɵtext(32, \"On Hold\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(33, \"div\", 2)(34, \"label\", 17);\n      i0.ɵɵtext(35, \"Functionality\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"select\", 18)(37, \"option\", 19);\n      i0.ɵɵtext(38, \"Functionality 1\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"option\", 20);\n      i0.ɵɵtext(40, \"Functionality 2\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"option\", 21);\n      i0.ɵɵtext(42, \"Functionality 3\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(43, \"div\", 2)(44, \"label\", 22);\n      i0.ɵɵtext(45, \"Start date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(46, \"input\", 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"div\", 2)(48, \"label\", 24);\n      i0.ɵɵtext(49, \"End date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(50, \"input\", 25);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"button\", 26);\n      i0.ɵɵtext(52, \"Create task\");\n      i0.ɵɵelementEnd()()()();\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.NgControlStatusGroup, i1.NgForm],\n  styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\t\\\"use strict\\\";\\n \\t\\n \\t\\n })()[_ngcontent-%COMP%]\\n;\"]\n});","map":{"version":3,"mappings":"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","names":["Priority","WorkStatus","FormControl","Validators","TaskFormComponent","constructor","formBuilder","taskService","functionalityService","router","Object","values","ngOnInit","currentDate","Date","toISOString","split","addedDateControl","value","disabled","taskForm","group","name","required","description","priority","Low","projectName","owner","status","Todo","addedDate","startDate","endDate","timeSpent","functionality","getTasks","subscribe","tasks","error","console","log","getFunctionalities","functionalities","functionalityList","addTask","addedDateValue","selectedFunctionalityId","selectedFunctionality","find","f","ID","newTask","now","toString","functionalityID","state","assignedUser","createTask","task","push","navigateByUrl","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/haze/Desktop/Angular Final Project/angularFinalProject/src/app/components/task-form/task-form.component.ts","/Users/haze/Desktop/Angular Final Project/angularFinalProject/src/app/components/task-form/task-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { TaskInterface } from 'src/app/interfaces/task.interface';\nimport { TaskService } from 'src/app/services/task.service';\nimport { Priority } from 'src/app/enums/priority.enum';\nimport { WorkStatus } from 'src/app/enums/workStatus.enum';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { FunctionalityService } from 'src/app/services/functionality.service';\nimport { FunctionalityInterface } from 'src/app/interfaces/functionality.interface';\n\n@Component({\n  selector: 'app-task-form',\n  templateUrl: './task-form.component.html',\n  styleUrls: ['./task-form.component.scss'],\n})\nexport class TaskFormComponent implements OnInit {\n  tasks: TaskInterface[] = [];\n  taskForm!: FormGroup;\n  workStatusValues = Object.values(WorkStatus);\n  priorityValues = Object.values(Priority);\n  functionalityList: FunctionalityInterface[] = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private taskService: TaskService,\n    private functionalityService: FunctionalityService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    const currentDate = new Date().toISOString().split('T')[0];\n    const addedDateControl = new FormControl({\n      value: currentDate,\n      disabled: true,\n    });\n\n    this.taskForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      priority: [Priority.Low, Validators.required],\n      projectName: ['', Validators.required],\n      owner: ['', Validators.required],\n      status: [WorkStatus.Todo, Validators.required],\n      addedDate: addedDateControl,\n      startDate: [''],\n      endDate: [''],\n      timeSpent: [''],\n      functionality: ['', Validators.required],\n    });\n\n    this.taskService.getTasks().subscribe(\n      (tasks: TaskInterface[]) => {\n        this.tasks = tasks;\n      },\n      (error) => console.log(error)\n    );\n\n    this.functionalityService.getFunctionalities().subscribe(\n      (functionalities: FunctionalityInterface[]) => {\n        this.functionalityList = functionalities;\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  addTask() {\n    const currentDate = new Date().toISOString().split('T')[0];\n    const addedDateControl = new FormControl({\n      value: currentDate,\n      disabled: true,\n    });\n\n    const addedDateValue =\n      addedDateControl.value !== null ? addedDateControl.value : currentDate;\n\n    const selectedFunctionalityId = this.taskForm.value.functionality;\n\n    const selectedFunctionality = this.functionalityList.find(\n      (f) => f.ID === selectedFunctionalityId\n    );\n\n    if (!selectedFunctionality) {\n      return; // Dodaj odpowiednie obsłużenie błędu, jeśli funkcjonalność nie zostanie znaleziona\n    }\n\n    const newTask: TaskInterface = {\n      ID: Date.now().toString(),\n      name: this.taskForm.value.name,\n      description: this.taskForm.value.description,\n      priority: this.taskForm.value.priority,\n      functionalityID: selectedFunctionality.ID,\n      functionality: selectedFunctionality,\n      state: this.taskForm.value.status,\n      addedDate: new Date(addedDateValue),\n      startDate: this.taskForm.value.startDate,\n      endDate: this.taskForm.value.endDate,\n      assignedUser: this.taskForm.value.owner,\n    };\n\n    this.taskService.createTask(newTask).subscribe(\n      (task: TaskInterface) => {\n        console.log(task);\n        if (!selectedFunctionality.tasks) {\n          selectedFunctionality.tasks = []; // Inicjalizuj tablicę zadaniami, jeśli nie istnieje\n        }\n        selectedFunctionality.tasks.push(task); // Dodaj zadanie do listy zadań funkcjonalności\n        this.router.navigateByUrl('/functionalities');\n      },\n      (error) => console.log(error)\n    );\n  }\n}\n","<form class=\"task-form\">\n  <div>\n    <h1>Create a new task for this functionality</h1>\n    <div class=\"form-group\">\n      <div class=\"input-group\">\n        <label for=\"title\">Title</label>\n        <input type=\"text\" id=\"title\" name=\"title\" required class=\"form-control\" />\n      </div>\n      <div class=\"input-group\">\n        <label for=\"description\">Description</label>\n        <input type=\"text\" id=\"description\" name=\"description\" required class=\"form-control\" />\n      </div>\n      <div class=\"input-group\">\n        <label for=\"priority\">Priority</label>\n        <select id=\"priority\" name=\"priority\" required class=\"form-control\">\n          <option value=\"High\">High</option>\n          <option value=\"Medium\">Medium</option>\n          <option value=\"Low\">Low</option>\n        </select>\n      </div>\n      <div class=\"input-group\">\n        <label for=\"status\">Status</label>\n        <select id=\"status\" name=\"status\" required class=\"form-control\">\n          <option value=\"In Progress\">In Progress</option>\n          <option value=\"Completed\">Completed</option>\n          <option value=\"On Hold\">On Hold</option>\n        </select>\n      </div>\n      <div class=\"input-group\">\n        <label for=\"functionality\">Functionality</label>\n        <select id=\"functionality\" name=\"functionality\" required class=\"form-control\">\n          <option value=\"1\">Functionality 1</option>\n          <option value=\"2\">Functionality 2</option>\n          <option value=\"3\">Functionality 3</option>\n        </select>\n      </div>\n      <div class=\"input-group\">\n        <label for=\"startDate\">Start date</label>\n        <input type=\"date\" id=\"startDate\" name=\"startDate\" required class=\"form-control\" />\n      </div>\n      <div class=\"input-group\">\n        <label for=\"endDate\">End date</label>\n        <input type=\"date\" id=\"endDate\" name=\"endDate\" required class=\"form-control\" />\n      </div>\n      <button class=\"btn-create-task\">Create task</button>\n    </div>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}