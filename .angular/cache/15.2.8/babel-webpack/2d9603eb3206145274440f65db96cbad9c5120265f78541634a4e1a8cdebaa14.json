{"ast":null,"code":"import { WorkStatus } from 'src/app/enums/workStatus.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/functionality.service\";\nimport * as i3 from \"src/app/services/task.service\";\nimport * as i4 from \"@angular/forms\";\nexport class TaskListComponent {\n  constructor(route, functionalityService, router, taskService) {\n    this.route = route;\n    this.functionalityService = functionalityService;\n    this.router = router;\n    this.taskService = taskService;\n    this.functionalities = [];\n    this.tasks = [];\n    this.taskService.getTasks().subscribe(taskList => {\n      this.tasks = taskList;\n    });\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id !== null) {\n        this.functionalityID = id;\n        this.getSingleFunctionality(this.functionalityID);\n      } else {\n        this.functionalityID = '';\n      }\n    });\n  }\n  getSingleFunctionality(ID) {\n    this.functionalityService.getSingleFunctionality(ID).subscribe(functionality => {\n      this.functionality = functionality;\n      this.functionalities.push(this.functionality);\n    });\n  }\n  deleteTask(ID) {\n    this.taskService.deleteTask(ID).subscribe(() => {\n      console.log('Task został usunięty');\n      this.tasks = this.tasks.filter(item => item.ID !== ID);\n    }, error => console.log(error));\n  }\n  showTaskDetails(ID) {\n    // Implementacja wyświetlania szczegółów zadania\n  }\n  addTask() {\n    this.router.navigate(['/task/create']);\n  }\n  updateFunctionalityStatus(functionality) {\n    if (functionality.tasks && functionality.tasks.length > 0) {\n      const hasDoingTask = functionality.tasks.some(task => task.state === WorkStatus.Doing);\n      const allTasksDone = functionality.tasks.every(task => task.state === WorkStatus.Done);\n      if (hasDoingTask) {\n        functionality.status = WorkStatus.Doing;\n      } else if (allTasksDone) {\n        functionality.status = WorkStatus.Done;\n      } else {\n        functionality.status = WorkStatus.Todo;\n      }\n    } else {\n      if (functionality.status === WorkStatus.Doing) {\n        functionality.status = WorkStatus.Done;\n      }\n    }\n  }\n}\nTaskListComponent.ɵfac = function TaskListComponent_Factory(t) {\n  return new (t || TaskListComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FunctionalityService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.TaskService));\n};\nTaskListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskListComponent,\n  selectors: [[\"app-task-list\"]],\n  decls: 53,\n  vars: 0,\n  consts: [[1, \"task-form\"], [1, \"form-container\"], [1, \"form-title\"], [1, \"form-fields\"], [1, \"form-field\"], [\"for\", \"title\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"required\", \"\", 1, \"form-input\"], [\"for\", \"description\", 1, \"form-label\"], [\"type\", \"text\", \"id\", \"description\", \"name\", \"description\", \"required\", \"\", 1, \"form-input\"], [\"for\", \"priority\", 1, \"form-label\"], [\"id\", \"priority\", \"name\", \"priority\", \"required\", \"\", 1, \"form-select\"], [\"value\", \"High\"], [\"value\", \"Medium\"], [\"value\", \"Low\"], [\"for\", \"status\", 1, \"form-label\"], [\"id\", \"status\", \"name\", \"status\", \"required\", \"\", 1, \"form-select\"], [\"value\", \"In Progress\"], [\"value\", \"Completed\"], [\"value\", \"On Hold\"], [\"for\", \"functionality\", 1, \"form-label\"], [\"id\", \"functionality\", \"name\", \"functionality\", \"required\", \"\", 1, \"form-select\"], [\"value\", \"1\"], [\"value\", \"2\"], [\"value\", \"3\"], [\"for\", \"startDate\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"startDate\", \"name\", \"startDate\", \"required\", \"\", 1, \"form-input\"], [\"for\", \"endDate\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"endDate\", \"name\", \"endDate\", \"required\", \"\", 1, \"form-input\"], [1, \"form-button\", 3, \"click\"]],\n  template: function TaskListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Create a new task for this functionality\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 4)(14, \"label\", 9);\n      i0.ɵɵtext(15, \"Priority\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"select\", 10)(17, \"option\", 11);\n      i0.ɵɵtext(18, \"High\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"option\", 12);\n      i0.ɵɵtext(20, \"Medium\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"option\", 13);\n      i0.ɵɵtext(22, \"Low\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(23, \"div\", 4)(24, \"label\", 14);\n      i0.ɵɵtext(25, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"select\", 15)(27, \"option\", 16);\n      i0.ɵɵtext(28, \"In Progress\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"option\", 17);\n      i0.ɵɵtext(30, \"Completed\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"option\", 18);\n      i0.ɵɵtext(32, \"On Hold\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(33, \"div\", 4)(34, \"label\", 19);\n      i0.ɵɵtext(35, \"Functionality\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"select\", 20)(37, \"option\", 21);\n      i0.ɵɵtext(38, \"Functionality 1\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"option\", 22);\n      i0.ɵɵtext(40, \"Functionality 2\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"option\", 23);\n      i0.ɵɵtext(42, \"Functionality 3\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(43, \"div\", 4)(44, \"label\", 24);\n      i0.ɵɵtext(45, \"Start date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(46, \"input\", 25);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"div\", 4)(48, \"label\", 26);\n      i0.ɵɵtext(49, \"End date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(50, \"input\", 27);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(51, \"button\", 28);\n      i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_51_listener() {\n        return ctx.addTask();\n      });\n      i0.ɵɵtext(52, \"Create task\");\n      i0.ɵɵelementEnd()()()();\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.NgControlStatusGroup, i4.NgForm],\n  styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\t\\\"use strict\\\";\\n \\t\\n \\t\\n })()[_ngcontent-%COMP%]\\n;\"]\n});","map":{"version":3,"mappings":"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","names":["WorkStatus","TaskListComponent","constructor","route","functionalityService","router","taskService","getTasks","subscribe","taskList","tasks","ngOnInit","paramMap","params","id","get","functionalityID","getSingleFunctionality","ID","functionality","functionalities","push","deleteTask","console","log","filter","item","error","showTaskDetails","addTask","navigate","updateFunctionalityStatus","length","hasDoingTask","some","task","state","Doing","allTasksDone","every","Done","status","Todo","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/haze/Desktop/Angular Final Project/angularFinalProject/src/app/components/task-list/task-list.component.ts","/Users/haze/Desktop/Angular Final Project/angularFinalProject/src/app/components/task-list/task-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FunctionalityInterface } from 'src/app/interfaces/functionality.interface';\nimport { FunctionalityService } from 'src/app/services/functionality.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TaskService } from 'src/app/services/task.service';\nimport { TaskInterface } from 'src/app/interfaces/task.interface';\nimport { WorkStatus } from 'src/app/enums/workStatus.enum';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.scss'],\n})\nexport class TaskListComponent implements OnInit {\n  functionality!: FunctionalityInterface;\n  functionalities: FunctionalityInterface[] = [];\n  tasks: TaskInterface[] = [];\n  functionalityID!: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private functionalityService: FunctionalityService,\n    private router: Router,\n    private taskService: TaskService\n  ) {\n    this.taskService.getTasks().subscribe((taskList: TaskInterface[]) => {\n      this.tasks = taskList;\n    });\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params) => {\n      const id = params.get('id');\n      if (id !== null) {\n        this.functionalityID = id;\n        this.getSingleFunctionality(this.functionalityID);\n      } else {\n        this.functionalityID = '';\n      }\n    });\n  }\n\n  getSingleFunctionality(ID: string) {\n    this.functionalityService\n      .getSingleFunctionality(ID)\n      .subscribe((functionality) => {\n        this.functionality = functionality as FunctionalityInterface;\n        this.functionalities.push(this.functionality);\n      });\n  }\n\n  deleteTask(ID: string) {\n    this.taskService.deleteTask(ID).subscribe(\n      () => {\n        console.log('Task został usunięty');\n        this.tasks = this.tasks.filter((item) => item.ID !== ID);\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  showTaskDetails(ID: string) {\n    // Implementacja wyświetlania szczegółów zadania\n  }\n\n  addTask() {\n    this.router.navigate(['/task/create']);\n  }\n\n  updateFunctionalityStatus(functionality: FunctionalityInterface) {\n    if (functionality.tasks && functionality.tasks.length > 0) {\n      const hasDoingTask = functionality.tasks.some(\n        (task) => task.state === WorkStatus.Doing\n      );\n      const allTasksDone = functionality.tasks.every(\n        (task) => task.state === WorkStatus.Done\n      );\n\n      if (hasDoingTask) {\n        functionality.status = WorkStatus.Doing;\n      } else if (allTasksDone) {\n        functionality.status = WorkStatus.Done;\n      } else {\n        functionality.status = WorkStatus.Todo;\n      }\n    } else {\n      if (functionality.status === WorkStatus.Doing) {\n        functionality.status = WorkStatus.Done;\n      }\n    }\n  }\n}\n","<form class=\"task-form\">\n  <div class=\"form-container\">\n    <h1 class=\"form-title\">Create a new task for this functionality</h1>\n    <div class=\"form-fields\">\n      <div class=\"form-field\">\n        <label for=\"title\" class=\"form-label\">Title</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          required\n          class=\"form-input\"\n        />\n      </div>\n      <div class=\"form-field\">\n        <label for=\"description\" class=\"form-label\">Description</label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          name=\"description\"\n          required\n          class=\"form-input\"\n        />\n      </div>\n      <div class=\"form-field\">\n        <label for=\"priority\" class=\"form-label\">Priority</label>\n        <select\n          id=\"priority\"\n          name=\"priority\"\n          required\n          class=\"form-select\"\n        >\n          <option value=\"High\">High</option>\n          <option value=\"Medium\">Medium</option>\n          <option value=\"Low\">Low</option>\n        </select>\n      </div>\n      <div class=\"form-field\">\n        <label for=\"status\" class=\"form-label\">Status</label>\n        <select\n          id=\"status\"\n          name=\"status\"\n          required\n          class=\"form-select\"\n        >\n          <option value=\"In Progress\">In Progress</option>\n          <option value=\"Completed\">Completed</option>\n          <option value=\"On Hold\">On Hold</option>\n        </select>\n      </div>\n      <div class=\"form-field\">\n        <label for=\"functionality\" class=\"form-label\">Functionality</label>\n        <select\n          id=\"functionality\"\n          name=\"functionality\"\n          required\n          class=\"form-select\"\n        >\n          <option value=\"1\">Functionality 1</option>\n          <option value=\"2\">Functionality 2</option>\n          <option value=\"3\">Functionality 3</option>\n        </select>\n      </div>\n      <div class=\"form-field\">\n        <label for=\"startDate\" class=\"form-label\">Start date</label>\n        <input\n          type=\"date\"\n          id=\"startDate\"\n          name=\"startDate\"\n          required\n          class=\"form-input\"\n        />\n      </div>\n      <div class=\"form-field\">\n        <label for=\"endDate\" class=\"form-label\">End date</label>\n        <input\n          type=\"date\"\n          id=\"endDate\"\n          name=\"endDate\"\n          required\n          class=\"form-input\"\n        />\n      </div>\n      <button (click)=\"addTask()\" class=\"form-button\">Create task</button>\n    </div>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}