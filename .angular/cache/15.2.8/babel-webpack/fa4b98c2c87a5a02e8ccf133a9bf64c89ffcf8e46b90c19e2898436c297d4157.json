{"ast":null,"code":"import { WorkStatus } from 'src/app/enums/workStatus.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/functionality.service\";\nimport * as i3 from \"src/app/services/task.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction TaskListComponent_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const priority_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", priority_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(priority_r3);\n  }\n}\nfunction TaskListComponent_option_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(status_r4);\n  }\n}\nfunction TaskListComponent_option_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const functionality_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", functionality_r5.ID);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(functionality_r5.name);\n  }\n}\nexport class TaskListComponent {\n  constructor(route, functionalityService, router, taskService) {\n    this.route = route;\n    this.functionalityService = functionalityService;\n    this.router = router;\n    this.taskService = taskService;\n    this.functionalities = [];\n    this.tasks = [];\n    this.taskService.getTasks().subscribe(taskList => {\n      this.tasks = taskList;\n    });\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id !== null) {\n        this.functionalityID = id;\n        this.getSingleFunctionality(this.functionalityID);\n      } else {\n        this.functionalityID = '';\n      }\n    });\n  }\n  getSingleFunctionality(ID) {\n    this.functionalityService.getSingleFunctionality(ID).subscribe(functionality => {\n      this.functionality = functionality;\n      this.functionalities.push(this.functionality);\n    });\n  }\n  deleteTask(ID) {\n    this.taskService.deleteTask(ID).subscribe(() => {\n      console.log('Task został usunięty');\n      this.tasks = this.tasks.filter(item => item.ID !== ID);\n    }, error => console.log(error));\n  }\n  showTaskDetails(ID) {\n    // Implementacja wyświetlania szczegółów zadania\n  }\n  addTask() {\n    this.router.navigate(['/task/create']);\n  }\n  updateFunctionalityStatus(functionality) {\n    if (functionality.tasks && functionality.tasks.length > 0) {\n      const hasDoingTask = functionality.tasks.some(task => task.state === WorkStatus.Doing);\n      const allTasksDone = functionality.tasks.every(task => task.state === WorkStatus.Done);\n      if (hasDoingTask) {\n        functionality.status = WorkStatus.Doing;\n      } else if (allTasksDone) {\n        functionality.status = WorkStatus.Done;\n      } else {\n        functionality.status = WorkStatus.Todo;\n      }\n    } else {\n      if (functionality.status === WorkStatus.Doing) {\n        functionality.status = WorkStatus.Done;\n      }\n    }\n  }\n}\nTaskListComponent.ɵfac = function TaskListComponent_Factory(t) {\n  return new (t || TaskListComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FunctionalityService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.TaskService));\n};\nTaskListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskListComponent,\n  selectors: [[\"app-task-list\"]],\n  decls: 54,\n  vars: 5,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", \"required\", \"\"], [\"for\", \"priority\"], [\"id\", \"priority\", \"formControlName\", \"priority\", \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"projectName\"], [\"type\", \"text\", \"id\", \"projectName\", \"formControlName\", \"projectName\", \"required\", \"\"], [\"for\", \"owner\"], [\"type\", \"text\", \"id\", \"owner\", \"formControlName\", \"owner\", \"required\", \"\"], [\"for\", \"status\"], [\"id\", \"status\", \"formControlName\", \"status\", \"required\", \"\"], [\"for\", \"addedDate\"], [\"type\", \"text\", \"id\", \"addedDate\", \"formControlName\", \"addedDate\", 3, \"disabled\"], [\"for\", \"startDate\"], [\"type\", \"text\", \"id\", \"startDate\", \"formControlName\", \"startDate\"], [\"for\", \"endDate\"], [\"type\", \"text\", \"id\", \"endDate\", \"formControlName\", \"endDate\"], [\"for\", \"timeSpent\"], [\"type\", \"text\", \"id\", \"timeSpent\", \"formControlName\", \"timeSpent\"], [\"for\", \"functionality\"], [\"id\", \"functionality\", \"formControlName\", \"functionality\", \"required\", \"\"], [\"type\", \"submit\"], [3, \"value\"]],\n  template: function TaskListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n      i0.ɵɵtext(2, \"Add Task\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function TaskListComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.addTask();\n      });\n      i0.ɵɵelementStart(4, \"div\")(5, \"label\", 1);\n      i0.ɵɵtext(6, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\")(9, \"label\", 3);\n      i0.ɵɵtext(10, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"textarea\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\")(13, \"label\", 5);\n      i0.ɵɵtext(14, \"Priority:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"select\", 6);\n      i0.ɵɵtemplate(16, TaskListComponent_option_16_Template, 2, 2, \"option\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\")(18, \"label\", 8);\n      i0.ɵɵtext(19, \"Project Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"div\")(22, \"label\", 10);\n      i0.ɵɵtext(23, \"Owner:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\")(26, \"label\", 12);\n      i0.ɵɵtext(27, \"Status:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"select\", 13);\n      i0.ɵɵtemplate(29, TaskListComponent_option_29_Template, 2, 2, \"option\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"div\")(31, \"label\", 14);\n      i0.ɵɵtext(32, \"Added Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(33, \"input\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\")(35, \"label\", 16);\n      i0.ɵɵtext(36, \"Start Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(37, \"input\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"div\")(39, \"label\", 18);\n      i0.ɵɵtext(40, \"End Date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(41, \"input\", 19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"div\")(43, \"label\", 20);\n      i0.ɵɵtext(44, \"Time Spent:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(45, \"input\", 21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"div\")(47, \"label\", 22);\n      i0.ɵɵtext(48, \"Functionality:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"select\", 23);\n      i0.ɵɵtemplate(50, TaskListComponent_option_50_Template, 2, 2, \"option\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(51, \"div\")(52, \"button\", 24);\n      i0.ɵɵtext(53, \"Add Task\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.taskForm);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.priorityValues);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngForOf\", ctx.workStatusValues);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"disabled\", true);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.functionalityList);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.FormGroupDirective, i5.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0YXNrLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXNrLWxpc3QvdGFzay1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLG9LQUFvSyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["WorkStatus","i0","TaskListComponent","constructor","route","functionalityService","router","taskService","getTasks","subscribe","taskList","tasks","ngOnInit","paramMap","params","id","get","functionalityID","getSingleFunctionality","ID","functionality","functionalities","push","deleteTask","console","log","filter","item","error","showTaskDetails","addTask","navigate","updateFunctionalityStatus","length","hasDoingTask","some","task","state","Doing","allTasksDone","every","Done","status","Todo","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/haze/Desktop/Angular Final Project/angularFinalProject/src/app/components/task-list/task-list.component.ts","/Users/haze/Desktop/Angular Final Project/angularFinalProject/src/app/components/task-list/task-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FunctionalityInterface } from 'src/app/interfaces/functionality.interface';\nimport { FunctionalityService } from 'src/app/services/functionality.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TaskService } from 'src/app/services/task.service';\nimport { TaskInterface } from 'src/app/interfaces/task.interface';\nimport { WorkStatus } from 'src/app/enums/workStatus.enum';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css'],\n})\nexport class TaskListComponent implements OnInit {\n  functionality!: FunctionalityInterface;\n  functionalities: FunctionalityInterface[] = [];\n  tasks: TaskInterface[] = [];\n  functionalityID!: string;\n  item: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private functionalityService: FunctionalityService,\n    private router: Router,\n    private taskService: TaskService\n  ) {\n    this.taskService.getTasks().subscribe((taskList: TaskInterface[]) => {\n      this.tasks = taskList;\n    });\n  }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params) => {\n      const id = params.get('id');\n      if (id !== null) {\n        this.functionalityID = id;\n        this.getSingleFunctionality(this.functionalityID);\n      } else {\n        this.functionalityID = '';\n      }\n    });\n  }\n\n  getSingleFunctionality(ID: string) {\n    this.functionalityService\n      .getSingleFunctionality(ID)\n      .subscribe((functionality) => {\n        this.functionality = functionality as FunctionalityInterface;\n        this.functionalities.push(this.functionality);\n      });\n  }\n\n  deleteTask(ID: string) {\n    this.taskService.deleteTask(ID).subscribe(\n      () => {\n        console.log('Task został usunięty');\n        this.tasks = this.tasks.filter((item) => item.ID !== ID);\n      },\n      (error) => console.log(error)\n    );\n  }\n\n  showTaskDetails(ID: string) {\n    // Implementacja wyświetlania szczegółów zadania\n  }\n\n  addTask() {\n    this.router.navigate(['/task/create']);\n  }\n\n  updateFunctionalityStatus(functionality: FunctionalityInterface) {\n    if (functionality.tasks && functionality.tasks.length > 0) {\n      const hasDoingTask = functionality.tasks.some(\n        (task) => task.state === WorkStatus.Doing\n      );\n      const allTasksDone = functionality.tasks.every(\n        (task) => task.state === WorkStatus.Done\n      );\n\n      if (hasDoingTask) {\n        functionality.status = WorkStatus.Doing;\n      } else if (allTasksDone) {\n        functionality.status = WorkStatus.Done;\n      } else {\n        functionality.status = WorkStatus.Todo;\n      }\n    } else {\n      if (functionality.status === WorkStatus.Doing) {\n        functionality.status = WorkStatus.Done;\n      }\n    }\n  }\n}\n","<div>\n  <h1>Add Task</h1>\n  <form [formGroup]=\"taskForm\" (ngSubmit)=\"addTask()\">\n    <div>\n      <label for=\"name\">Name:</label>\n      <input type=\"text\" id=\"name\" formControlName=\"name\" required>\n    </div>\n    <div>\n      <label for=\"description\">Description:</label>\n      <textarea id=\"description\" formControlName=\"description\" required></textarea>\n    </div>\n    <div>\n      <label for=\"priority\">Priority:</label>\n      <select id=\"priority\" formControlName=\"priority\" required>\n        <option *ngFor=\"let priority of priorityValues\" [value]=\"priority\">{{ priority }}</option>\n      </select>\n    </div>\n    <div>\n      <label for=\"projectName\">Project Name:</label>\n      <input type=\"text\" id=\"projectName\" formControlName=\"projectName\" required>\n    </div>\n    <div>\n      <label for=\"owner\">Owner:</label>\n      <input type=\"text\" id=\"owner\" formControlName=\"owner\" required>\n    </div>\n    <div>\n      <label for=\"status\">Status:</label>\n      <select id=\"status\" formControlName=\"status\" required>\n        <option *ngFor=\"let status of workStatusValues\" [value]=\"status\">{{ status }}</option>\n      </select>\n    </div>\n    <div>\n      <label for=\"addedDate\">Added Date:</label>\n      <input type=\"text\" id=\"addedDate\" formControlName=\"addedDate\" [disabled]=\"true\">\n    </div>\n    <div>\n      <label for=\"startDate\">Start Date:</label>\n      <input type=\"text\" id=\"startDate\" formControlName=\"startDate\">\n    </div>\n    <div>\n      <label for=\"endDate\">End Date:</label>\n      <input type=\"text\" id=\"endDate\" formControlName=\"endDate\">\n    </div>\n    <div>\n      <label for=\"timeSpent\">Time Spent:</label>\n      <input type=\"text\" id=\"timeSpent\" formControlName=\"timeSpent\">\n    </div>\n    <div>\n      <label for=\"functionality\">Functionality:</label>\n      <select id=\"functionality\" formControlName=\"functionality\" required>\n        <option *ngFor=\"let functionality of functionalityList\" [value]=\"functionality.ID\">{{ functionality.name }}</option>\n      </select>\n    </div>\n    <div>\n      <button type=\"submit\">Add Task</button>\n    </div>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}