{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { WorkStatus } from 'src/app/enums/workStatus.enum';\nimport { Priority } from 'src/app/enums/priority.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/services/functionality.service\";\nimport * as i4 from \"@angular/common\";\nfunction FunctionalityEditComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const priority_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", priority_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", priority_r2, \" \");\n  }\n}\nfunction FunctionalityEditComponent_option_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", status_r3, \" \");\n  }\n}\nexport class FunctionalityEditComponent {\n  constructor(route, formBuilder, functionalitiesService, router) {\n    this.route = route;\n    this.formBuilder = formBuilder;\n    this.functionalitiesService = functionalitiesService;\n    this.router = router;\n    this.workStatusValues = Object.values(WorkStatus);\n    this.priorityValues = Object.values(Priority);\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      const id = params.get('id');\n      if (id !== null) {\n        this.functionalityId = id;\n        this.loadFunctionality();\n      } else {\n        this.functionalityId = '';\n      }\n    });\n    const currentDate = new Date().toISOString().split('T')[0];\n    const addedDateControl = new FormControl({\n      value: currentDate,\n      disabled: true\n    });\n    this.functionalityForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      priority: [Priority.Low, Validators.required],\n      status: [WorkStatus.Todo, Validators.required],\n      addedDate: addedDateControl,\n      startDate: [''],\n      endDate: [''],\n      timeSpent: ['']\n    });\n  }\n  // List task, ktore naleza do tej funkcjonalnosci\n  // 2. wszystkie funkcjonalnosci\n  // 3. id funkcjonalnosci do ktorej przynaleza te taski w liscie\n  // 4. dla kazdego obiekut z taskow sprawdz czy ktorys status jest doing\n  // 5. jezeli jest to funkctionality.status = doingol\n  loadFunctionality() {\n    this.functionalitiesService.getSingleFunctionality(this.functionalityId).subscribe(functionality => {\n      this.functionality = functionality;\n    }, error => {\n      console.log(error);\n    });\n  }\n  updateFunctionalityStatus(taskStatus) {\n    if (this.functionality) {\n      if (taskStatus === 'doing') {\n        this.functionality.status = WorkStatus.Doing;\n      } else if (taskStatus === 'done') {\n        this.functionality.status = WorkStatus.Done;\n      } else {\n        this.functionality.status = WorkStatus.Todo;\n      }\n    }\n  }\n  editFunctionality() {\n    const taskStatus = this.functionalityForm.value.status;\n    this.updateFunctionalityStatus(taskStatus);\n    if (this.functionality) {\n      this.functionality.name = this.functionalityForm.value.name;\n      this.functionality.description = this.functionalityForm.value.description;\n      this.functionality.priority = this.functionalityForm.value.priority;\n      this.functionality.status = this.functionalityForm.value.status;\n      this.functionality.addedDate = new Date(this.functionalityForm.value.addedDate);\n      this.functionality.startDate = this.functionalityForm.value.startDate ? new Date(this.functionalityForm.value.startDate) : undefined;\n      this.functionality.endDate = this.functionalityForm.value.endDate ? new Date(this.functionalityForm.value.endDate) : undefined;\n      this.functionality.timeSpent = this.functionalityForm.value.timeSpent ? +this.functionalityForm.value.timeSpent : undefined;\n      this.functionalitiesService.updateFunctionality(this.functionality).subscribe(functionality => {\n        console.log(functionality);\n        this.router.navigate(['/functionalities']);\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n}\nFunctionalityEditComponent.ɵfac = function FunctionalityEditComponent_Factory(t) {\n  return new (t || FunctionalityEditComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.FunctionalityService), i0.ɵɵdirectiveInject(i1.Router));\n};\nFunctionalityEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FunctionalityEditComponent,\n  selectors: [[\"app-functionality-edit\"]],\n  decls: 33,\n  vars: 3,\n  consts: [[1, \"flex\", \"flex-col\", \"items-center\", \"my-6\", 3, \"formGroup\"], [1, \"max-w-[500px]\", \"w-full\"], [1, \"text-black-link\", \"text-2xl\", \"text-center\", \"font-bold\", \"mb-2\"], [1, \"w-full\", \"px-12\"], [1, \"flex\", \"flex-col\", \"mt-4\", \"gap-2\"], [\"htmlFor\", \"title\", 1, \"text-sm\"], [\"type\", \"text\", \"id\", \"title\", \"name\", \"title\", \"formControlName\", \"name\", \"required\", \"\", 1, \"w-full\", \"border-gray-300\", \"px-3\", \"py-2\", \"rounded-sm\", \"shadow-sm\", \"focus:outline-none\", \"focus:border-indigo-500\"], [1, \"flex\", \"flex-col\", \"my-4\", \"gap-2\"], [\"htmlFor\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"name\", \"description\", \"formControlName\", \"description\", \"required\", \"\", 1, \"w-full\", \"border-gray-300\", \"px-3\", \"py-2\", \"rounded-sm\", \"shadow-sm\", \"focus:outline-none\", \"focus:border-indigo-500\"], [\"htmlFor\", \"priority\"], [\"id\", \"priority\", \"name\", \"priority\", \"formControlName\", \"priority\", \"required\", \"\", 1, \"w-full\", \"border-gray-300\", \"px-3\", \"py-2\", \"rounded-sm\", \"shadow-sm\", \"focus:outline-none\", \"focus:border-indigo-500\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"htmlFor\", \"status\"], [\"id\", \"status\", \"name\", \"status\", \"formControlName\", \"status\", \"required\", \"\", 1, \"w-full\", \"border-gray-300\", \"px-3\", \"py-2\", \"rounded-sm\", \"shadow-sm\", \"focus:outline-none\", \"focus:border-indigo-500\"], [\"htmlFor\", \"startDate\"], [\"type\", \"date\", \"id\", \"startDate\", \"name\", \"startDate\", \"formControlName\", \"startDate\", \"min\", \"Date.now()\", \"required\", \"\", 1, \"w-full\", \"border-gray-300\", \"px-3\", \"py-2\", \"rounded-sm\", \"shadow-sm\", \"focus:outline-none\", \"focus:border-indigo-500\"], [\"htmlFor\", \"endDate\"], [\"type\", \"date\", \"id\", \"endDate\", \"name\", \"endDate\", \"formControlName\", \"endDate\", \"required\", \"\", 1, \"w-full\", \"border-gray-300\", \"px-3\", \"py-2\", \"rounded-sm\", \"shadow-sm\", \"focus:outline-none\", \"focus:border-indigo-500\"], [1, \"text-xl\", \"font-bold\", \"text-white\", \"rounded-lg\", \"bg-blue-500\", \"mt-6\", \"w-full\", \"py-3\", 3, \"click\"], [3, \"value\"]],\n  template: function FunctionalityEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \" Edit functionality \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \" Title \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n      i0.ɵɵtext(11, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 7)(14, \"label\", 10);\n      i0.ɵɵtext(15, \"Priority\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"select\", 11);\n      i0.ɵɵtemplate(17, FunctionalityEditComponent_option_17_Template, 2, 2, \"option\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 7)(19, \"label\", 13);\n      i0.ɵɵtext(20, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"select\", 14);\n      i0.ɵɵtemplate(22, FunctionalityEditComponent_option_22_Template, 2, 2, \"option\", 12);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 7)(24, \"label\", 15);\n      i0.ɵɵtext(25, \"Start date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"div\", 7)(28, \"label\", 17);\n      i0.ɵɵtext(29, \"End date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"button\", 19);\n      i0.ɵɵlistener(\"click\", function FunctionalityEditComponent_Template_button_click_31_listener() {\n        return ctx.editFunctionality();\n      });\n      i0.ɵɵtext(32, \" Edit functionality \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.functionalityForm);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.priorityValues);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.workStatusValues);\n    }\n  },\n  dependencies: [i4.NgForOf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmdW5jdGlvbmFsaXR5LWVkaXQuY29tcG9uZW50LnNjc3MifQ== */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9mdW5jdGlvbmFsaXR5LWVkaXQvZnVuY3Rpb25hbGl0eS1lZGl0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxvTEFBb0wiLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","WorkStatus","Priority","i0","FunctionalityEditComponent","constructor","route","formBuilder","functionalitiesService","router","Object","values","ngOnInit","paramMap","subscribe","params","id","get","functionalityId","loadFunctionality","currentDate","Date","toISOString","split","addedDateControl","value","disabled","functionalityForm","group","name","required","description","priority","Low","status","Todo","addedDate","startDate","endDate","timeSpent","getSingleFunctionality","functionality","error","console","log","updateFunctionalityStatus","taskStatus","Doing","Done","editFunctionality","undefined","updateFunctionality","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/haze/Desktop/Angular Final Project/angularFinalProject/src/app/components/functionality-edit/functionality-edit.component.ts","/Users/haze/Desktop/Angular Final Project/angularFinalProject/src/app/components/functionality-edit/functionality-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FunctionalityInterface } from 'src/app/interfaces/functionality.interface';\nimport { FunctionalityService } from 'src/app/services/functionality.service';\nimport { TaskInterface } from 'src/app/interfaces/task.interface';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { WorkStatus } from 'src/app/enums/workStatus.enum';\nimport { Priority } from 'src/app/enums/priority.enum';\n\n@Component({\n  selector: 'app-functionality-edit',\n  templateUrl: './functionality-edit.component.html',\n  styleUrls: ['./functionality-edit.component.scss'],\n})\nexport class FunctionalityEditComponent implements OnInit {\n  functionality: FunctionalityInterface | undefined;\n  functionalityForm!: FormGroup;\n  workStatusValues = Object.values(WorkStatus);\n  priorityValues = Object.values(Priority);\n  functionalityId!: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private functionalitiesService: FunctionalityService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe((params) => {\n      const id = params.get('id');\n      if (id !== null) {\n        this.functionalityId = id;\n        this.loadFunctionality();\n      } else {\n        this.functionalityId = '';\n      }\n    });\n\n    const currentDate = new Date().toISOString().split('T')[0];\n    const addedDateControl = new FormControl({\n      value: currentDate,\n      disabled: true,\n    });\n\n    this.functionalityForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      priority: [Priority.Low, Validators.required],\n      status: [WorkStatus.Todo, Validators.required],\n      addedDate: addedDateControl,\n      startDate: [''],\n      endDate: [''],\n      timeSpent: [''],\n    });\n  }\n\n  // List task, ktore naleza do tej funkcjonalnosci\n  // 2. wszystkie funkcjonalnosci\n  // 3. id funkcjonalnosci do ktorej przynaleza te taski w liscie\n  // 4. dla kazdego obiekut z taskow sprawdz czy ktorys status jest doing\n  // 5. jezeli jest to funkctionality.status = doingol\n\n  loadFunctionality() {\n    this.functionalitiesService\n      .getSingleFunctionality(this.functionalityId)\n      .subscribe(\n        (functionality: FunctionalityInterface) => {\n          this.functionality = functionality;\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n  }\n\n  updateFunctionalityStatus(taskStatus: string) {\n    if (this.functionality) {\n      if (taskStatus === 'doing') {\n        this.functionality.status = WorkStatus.Doing;\n      } else if (taskStatus === 'done') {\n        this.functionality.status = WorkStatus.Done;\n      } else {\n        this.functionality.status = WorkStatus.Todo;\n      }\n    }\n  }\n\n  editFunctionality() {\n    const taskStatus = this.functionalityForm.value.status;\n    this.updateFunctionalityStatus(taskStatus);\n\n    if (this.functionality) {\n      this.functionality.name = this.functionalityForm.value.name;\n      this.functionality.description = this.functionalityForm.value.description;\n      this.functionality.priority = this.functionalityForm.value.priority;\n      this.functionality.status = this.functionalityForm.value.status;\n      this.functionality.addedDate = new Date(\n        this.functionalityForm.value.addedDate\n      );\n      this.functionality.startDate = this.functionalityForm.value.startDate\n        ? new Date(this.functionalityForm.value.startDate)\n        : undefined;\n      this.functionality.endDate = this.functionalityForm.value.endDate\n        ? new Date(this.functionalityForm.value.endDate)\n        : undefined;\n      this.functionality.timeSpent = this.functionalityForm.value.timeSpent\n        ? +this.functionalityForm.value.timeSpent\n        : undefined;\n\n      this.functionalitiesService\n        .updateFunctionality(this.functionality)\n        .subscribe(\n          (functionality) => {\n            console.log(functionality);\n            this.router.navigate(['/functionalities']);\n          },\n          (error) => {\n            console.log(error);\n          }\n        );\n    }\n  }\n}\n","<form [formGroup]=\"functionalityForm\" class=\"flex flex-col items-center my-6\">\n  <div class=\"max-w-[500px] w-full\">\n    <h1 class=\"text-black-link text-2xl text-center font-bold mb-2\">\n      Edit functionality\n    </h1>\n    <div class=\"w-full px-12\">\n      <div class=\"flex flex-col mt-4 gap-2\">\n        <label htmlFor=\"title\" class=\"text-sm\"> Title </label>\n\n        <input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          formControlName=\"name\"\n          required\n          class=\"w-full border-gray-300 px-3 py-2 rounded-sm shadow-sm focus:outline-none focus:border-indigo-500\"\n        />\n      </div>\n      <div class=\"flex flex-col my-4 gap-2\">\n        <label htmlFor=\"description\">Description</label>\n        <input\n          type=\"text\"\n          id=\"description\"\n          name=\"description\"\n          formControlName=\"description\"\n          required\n          class=\"w-full border-gray-300 px-3 py-2 rounded-sm shadow-sm focus:outline-none focus:border-indigo-500\"\n        />\n      </div>\n\n      <div class=\"flex flex-col my-4 gap-2\">\n        <label htmlFor=\"priority\">Priority</label>\n        <select\n          id=\"priority\"\n          name=\"priority\"\n          formControlName=\"priority\"\n          required\n          class=\"w-full border-gray-300 px-3 py-2 rounded-sm shadow-sm focus:outline-none focus:border-indigo-500\"\n        >\n          <option *ngFor=\"let priority of priorityValues\" [value]=\"priority\">\n            {{ priority }}\n          </option>\n        </select>\n      </div>\n\n      <div class=\"flex flex-col my-4 gap-2\">\n        <label htmlFor=\"status\">Status</label>\n        <select\n          id=\"status\"\n          name=\"status\"\n          formControlName=\"status\"\n          required\n          class=\"w-full border-gray-300 px-3 py-2 rounded-sm shadow-sm focus:outline-none focus:border-indigo-500\"\n        >\n          <option *ngFor=\"let status of workStatusValues\" [value]=\"status\">\n            {{ status }}\n          </option>\n        </select>\n      </div>\n\n      <div class=\"flex flex-col my-4 gap-2\">\n        <label htmlFor=\"startDate\">Start date</label>\n        <input\n          type=\"date\"\n          id=\"startDate\"\n          name=\"startDate\"\n          formControlName=\"startDate\"\n          min=\"Date.now()\"\n          required\n          class=\"w-full border-gray-300 px-3 py-2 rounded-sm shadow-sm focus:outline-none focus:border-indigo-500\"\n        />\n      </div>\n\n      <div class=\"flex flex-col my-4 gap-2\">\n        <label htmlFor=\"endDate\">End date</label>\n        <input\n          type=\"date\"\n          id=\"endDate\"\n          name=\"endDate\"\n          formControlName=\"endDate\"\n          required\n          class=\"w-full border-gray-300 px-3 py-2 rounded-sm shadow-sm focus:outline-none focus:border-indigo-500\"\n        />\n      </div>\n\n      <button\n        class=\"text-xl font-bold text-white rounded-lg bg-blue-500 mt-6 w-full py-3\"\n        (click)=\"editFunctionality()\"\n      >\n        Edit functionality\n      </button>\n    </div>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}